/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gorev;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.System.in;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Muaz Ahmed
 */
public class personel_listesi extends javax.swing.JFrame {

    DefaultTableModel dtm = new DefaultTableModel();
    /**
     * Creates new form personel_listesi
     */
    public boolean isCellEditable(int row, int column) {
       //Only the third column
       return column == 8;
   }
    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public Class<?> getColumnClass(int column) {
            switch (column) {
                case 8:
                    return ImageIcon.class;
                default:
                    return String.class;
            }
        }
    };

    public personel_listesi() {
        try {
            initComponents();
            this.setLocationRelativeTo(null);
            this.getContentPane().setBackground(Color.LIGHT_GRAY);
            jTablePersonel_listesi.setForeground(Color.blue);
            jTablePersonel_listesi.setBackground(Color.WHITE);
            jTablePersonel_listesi.setModel(model);
            String[] kolomnisimleri = {"Personel Id", "Adı", "Soyadı", "Maaş", "Depaartman", "Sube", "Cinsiyet", "Şifre", "Resim"};
            model.setColumnIdentifiers(kolomnisimleri);
            this.setExtendedState(this.MAXIMIZED_BOTH);
            jTablePersonel_listesi.setRowSelectionAllowed(true);
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            PreparedStatement pstmt = con.prepareStatement("SELECT * FROM Personel");
            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
//                try {
                    InputStream in = new ByteArrayInputStream(rs.getBytes(10));
//                }
//                catch (NullPointerException e) {
//                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), new ImageIcon()});
//                }
                try {
                    TableColumn column = jTablePersonel_listesi.getColumnModel().getColumn(8);
                    BufferedImage img = ImageIO.read(in);
                    Image image = img.getScaledInstance(column.getWidth(), jTablePersonel_listesi.getRowHeight(), img.SCALE_SMOOTH);
                    img = toBufferedImage(image);
                    model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), new ImageIcon(img)});
                } catch (IOException ex) {
                    Logger.getLogger(personel_listesi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } 
        catch (SQLException ex) {
            Logger.getLogger(personel_listesi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static BufferedImage toBufferedImage(Image img) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }
        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);
        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();
        // Return the buffered image
        return bimage;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonYenile = new javax.swing.JButton();
        jButtonSil = new javax.swing.JButton();
        jButtonDuzelt = new javax.swing.JButton();
        jButtonCikis = new javax.swing.JButton();
        jButtonAnaMenu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePersonel_listesi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonYenile.setText("Refresh");
        jButtonYenile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonYenileActionPerformed(evt);
            }
        });

        jButtonSil.setText("Delete");
        jButtonSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSilActionPerformed(evt);
            }
        });

        jButtonDuzelt.setText("Edit");
        jButtonDuzelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDuzeltActionPerformed(evt);
            }
        });

        jButtonCikis.setText("Exit");
        jButtonCikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCikisActionPerformed(evt);
            }
        });

        jButtonAnaMenu.setText("Main menu");
        jButtonAnaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnaMenuActionPerformed(evt);
            }
        });

        jTablePersonel_listesi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePersonel_listesi.setEditingColumn(0);
        jTablePersonel_listesi.setEditingRow(0);
        jTablePersonel_listesi.setRowHeight(80);
        jTablePersonel_listesi.setUpdateSelectionOnSort(false);
        jScrollPane2.setViewportView(jTablePersonel_listesi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCikis))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonYenile)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDuzelt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 421, Short.MAX_VALUE)
                        .addComponent(jButtonAnaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDuzelt)
                    .addComponent(jButtonSil)
                    .addComponent(jButtonYenile)
                    .addComponent(jButtonAnaMenu))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCikis)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private List<RowData> rowData;
    private String text;
    private boolean deletable;

    public void TestTableModel() {
        rowData = new ArrayList<RowData>(25);
        for (int index = 0; index < 10; index++) {
            rowData.add(new RowData(index));
        }
    }

    public void RowData(int row) {
        text = "Row " + row;
        deletable = Math.round(Math.random() * 1) == 0;
    }
    private void jButtonCikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCikisActionPerformed
        // TODO add your handling code here:
        new giris_ekrani().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCikisActionPerformed

    private void jButtonYenileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonYenileActionPerformed
        // TODO add your handling code here:
        new personel_listesi().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonYenileActionPerformed
    public Class getColumnClass(int column) {
                return jTablePersonel_listesi.getValueAt(0, column).getClass();
            }
    /* public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {
             
                if (c instanceof JLabel) {
                    Image image = (Image) value;
                    image1=image;
                    JLabel l = (JLabel) c;
                    l.setText("");
                    l.setIcon(new ImageIcon(image));
                }
                
                
                return ;
            }*/
    private void jButtonDuzeltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDuzeltActionPerformed
        try {
            personel_duzeltme p = new personel_duzeltme();
            p.jLabelId.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 0).toString());
            p.jTextFieldAdi.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 1).toString());
            p.jTextFieldSoyadi.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 2).toString());
            p.jTextFieldMaas.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 3).toString());
            p.jComboBoxDepartman.setSelectedItem(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 4));
            p.jComboBoxSube.setSelectedItem(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 5));
            if (jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 6).equals("Erkek")) {
                p.jRadioButtonErkek.isSelected();
            } else {
                p.jRadioButtonBeyan.isSelected();
            }
            p.jPasswordFieldsifre.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 7).toString());
            p.jPasswordFieldSifreTekrar.setText(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 7).toString());
            //getTableCellRendererComponent(jTablePersonel_listesi,jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 8),false,true,jTablePersonel_listesi.getSelectedRow(),8);
            javax.swing.ImageIcon icon=(javax.swing.ImageIcon)jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(),8);
   
//            InputStream in = new ByteArrayInputStream(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 8).toString().getBytes());
//            BufferedImage img = ImageIO.read(new ByteArrayInputStream(getColumnClass(8).cast(byte)));
           image1= icon.getImage();
           
         
            
           img= toBufferedImage(image1);
             image1= img.getScaledInstance(p.jLabelResim.getWidth(), p.jLabelResim.getHeight(), img.SCALE_SMOOTH);
            p.jLabelResim.setIcon(new ImageIcon(image1));
     
            p.setVisible(true);
            this.setVisible(false);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Lütfen bir personel seçiniz !");
        }
//        catch (IOException ex) {
//            Logger.getLogger(personel_listesi.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButtonDuzeltActionPerformed
    Image image1;
    BufferedImage img ;
    private void jButtonAnaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnaMenuActionPerformed
        // TODO add your handling code here:
        new ana_Menu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAnaMenuActionPerformed

    private void jButtonSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSilActionPerformed
        try {
            // TODO add your handling code here:
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            con.setAutoCommit(false);
            PreparedStatement pstmt = con.prepareStatement("DELETE FROM PERSONEL WHERE PERSONEL_ID=?");
            pstmt.setInt(1, Integer.parseInt(jTablePersonel_listesi.getValueAt(jTablePersonel_listesi.getSelectedRow(), 0).toString()));
            pstmt.executeUpdate();
            con.commit();
            model.removeRow(jTablePersonel_listesi.getSelectedRow());
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Lütfen bir personel seçiniz !");
        } catch (SQLException ex) {
            Logger.getLogger(personel_listesi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(personel_listesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(personel_listesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(personel_listesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(personel_listesi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new personel_listesi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnaMenu;
    private javax.swing.JButton jButtonCikis;
    private javax.swing.JButton jButtonDuzelt;
    private javax.swing.JButton jButtonSil;
    private javax.swing.JButton jButtonYenile;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePersonel_listesi;
    // End of variables declaration//GEN-END:variables
}
